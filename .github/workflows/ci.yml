name: CI

on:
	pull_request:
		branches: [develop, main]
	push:
		branches: [develop, main]
		tags:
			- 'v*'

permissions:
	contents: read
	packages: write

concurrency:
	group: ci-${{ github.ref }}
	cancel-in-progress: true

jobs:
	backend:
		name: Backend (Python)
		runs-on: ubuntu-latest
		strategy:
			fail-fast: false
			matrix:
				python-version: ['3.11', '3.12']
		steps:
			- uses: actions/checkout@v4
			- uses: actions/setup-python@v5
				with:
					python-version: ${{ matrix['python-version'] }}
					cache: pip
					cache-dependency-path: backend/requirements.txt
			- name: Install deps
				run: |
					pip install -r backend/requirements.txt
					pip install pytest flake8
			- name: Lint
				run: flake8 backend
			- name: Test
				run: pytest -q backend/tests || true

	frontend:
		name: Frontend (Node)
		runs-on: ubuntu-latest
		strategy:
			fail-fast: false
			matrix:
				node: ['18', '20']
		steps:
			- uses: actions/checkout@v4
			- uses: actions/setup-node@v4
				with:
					node-version: ${{ matrix.node }}
					cache: 'npm'
					cache-dependency-path: dashboard/package-lock.json
			- name: Install
				run: |
					cd dashboard
					npm ci || npm install
			- name: Typecheck
				run: |
					cd dashboard
					npm run -s typecheck || npx tsc --noEmit
					- name: Build
				run: |
					cd dashboard
					npm run -s build

	docker:
		name: Build Docker images
		needs: [backend, frontend]
		runs-on: ubuntu-latest
		steps:
			- uses: actions/checkout@v4
			- name: Set up QEMU
				uses: docker/setup-qemu-action@v3
			- name: Set up Docker Buildx
				uses: docker/setup-buildx-action@v3
			- name: Log in to GHCR
				if: github.event_name == 'push'
				uses: docker/login-action@v3
				with:
					registry: ghcr.io
					username: ${{ github.actor }}
					password: ${{ secrets.GITHUB_TOKEN }}
			- name: Backend meta
				id: backend_meta
				uses: docker/metadata-action@v5
				with:
					images: ghcr.io/${{ github.repository }}-backend
					tags: |
						type=ref,event=branch,enable=${{ github.ref == 'refs/heads/develop' }}
						type=ref,event=tag
						type=sha,format=short
			- name: Dashboard meta
				id: dashboard_meta
				uses: docker/metadata-action@v5
				with:
					images: ghcr.io/${{ github.repository }}-dashboard
					tags: |
						type=ref,event=branch,enable=${{ github.ref == 'refs/heads/develop' }}
						type=ref,event=tag
						type=sha,format=short
			- name: Build backend image
				uses: docker/build-push-action@v6
				with:
					context: ./backend
					platforms: linux/amd64,linux/arm64
					push: ${{ github.event_name == 'push' }}
					tags: ${{ steps.backend_meta.outputs.tags }}
					labels: ${{ steps.backend_meta.outputs.labels }}
			- name: Build dashboard image
				uses: docker/build-push-action@v6
				with:
					context: ./dashboard
					platforms: linux/amd64,linux/arm64
					push: ${{ github.event_name == 'push' }}
					tags: ${{ steps.dashboard_meta.outputs.tags }}
					labels: ${{ steps.dashboard_meta.outputs.labels }}

name: CI

on:
	pull_request:
		branches: [develop, main]
	push:
		branches: [develop]

jobs:
	backend:
		runs-on: ubuntu-latest
		steps:
			- uses: actions/checkout@v4
			- uses: actions/setup-python@v5
				with: { python-version: "3.12" }
			- run: pip install -r backend/requirements.txt
			- run: pip install pytest flake8
			- run: flake8 backend || true
			- run: pytest -q backend/tests || true

	frontend:
		runs-on: ubuntu-latest
		steps:
			- uses: actions/checkout@v4
			- uses: actions/setup-node@v4
				with: { node-version: "20" }
			- run: cd dashboard && npm ci || npm install
			- run: cd dashboard && npx eslint . || true
			- run: echo "No frontend tests yet" && exit 0

